services:
  mysql:
    container_name: multi-module-microservices-db
    image: mysql:5.7
    volumes:
      # - multi-module-microservices:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: password

  customer:
    container_name: customer-service
    depends_on:
      - mysql
    restart: on-failure
    build: /customer
    ports:
      - 8080:8080
    environment:
      MYSQL_HOST: mysql
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url=jdbc:mysql": "//jdbc:mysql:3306/spring_microservices_customer",
        "spring.datasource.username": "root",
        "spring.datasource.password": "password",
        "spring.jpa.hibernate.ddl-auto": "update"
        }'

  fraud:
    container_name: fraud-service
    depends_on:
      - mysql
    restart: on-failure
    build: /fraud
    ports:
      - 8081:8081
    environment:
      MYSQL_HOST: mysql
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url=jdbc:mysql": "//jdbc:mysql:3306/spring_microservices_fraud",
        "spring.datasource.username": "root",
        "spring.datasource.password": "password",
        "spring.jpa.hibernate.ddl-auto": "update"
        }'

# volumes:
#   multi-module-microservices:
